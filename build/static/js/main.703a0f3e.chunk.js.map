{"version":3,"sources":["userContext.js","JoblyAPI.js","Jobs/JobCard.js","images/cityscape.jpg","Home.js","Companies/CompanyCard.js","Forms/SearchBar.js","Companies/CompanyList.js","Companies/CompanyDetail.js","Jobs/JobsList.js","RedAlert.js","Forms/Login.js","Forms/Signup.js","Forms/Profile.js","Routes.js","NavBar.js","App.js","index.js"],"names":["UserContext","React","createContext","BASE_URL","process","JoblyApi","endpoint","data","method","console","debug","url","headers","Authorization","token","params","axios","error","response","message","Array","isArray","handle","this","request","res","company","searchTermString","companies","jobs","id","job","username","user","jobId","applied","JobCard","useContext","currentUser","applyForJob","title","salary","equity","companyName","isApplied","applications","includes","e","a","className","onClick","Home","jobApps","useState","jobsAppliedTo","setJobsAppliedTo","useEffect","fetchJobs","Promise","all","map","getJob","firstName","CompanyCard","name","description","style","color","textDecoration","to","SearchBar","addSearchTerm","formData","setFormData","onSubmit","preventDefault","type","value","searchTerm","placeholder","onChange","target","CompanyList","setCompanies","setSearchTerm","getAllCompanies","companyList","getCompanyList","log","length","term","CompanyDetail","useParams","companyJobs","setCompanyJobs","JoblyAPI","getCompany","companyRes","JobsList","setJobs","getAllJobs","jobList","getJobsList","RedAlert","role","Login","loginUser","isInvalidLogin","history","useHistory","password","handleChange","evt","push","htmlFor","aria-describedby","Signup","signUp","lastName","email","Profile","updateUser","localStorage","getItem","Routes","isAuthenticated","Boolean","exact","path","jobIcon","icon","faSuitcase","size","NavBar","logout","App","setToken","setCurrentUser","setIsInvalidLogin","userData","register","resp","login","formUsername","update","getUser","jwt","decode","getUserInfo","setItem","clear","Provider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.703a0f3e.chunk.js","sourcesContent":["import React from \"react\";\n\nconst UserContext = React.createContext();\n\nexport default UserContext;\n","import axios from \"axios\";\n\nconst BASE_URL = process.env.REACT_APP_BASE_URL || \"http://localhost:3001\";\n\n/** API Class.\n *\n * Static class tying together methods used to get/send to to the API.\n * There shouldn't be any frontend-specific stuff here, and there shouldn't\n * be any API-aware stuff elsewhere in the frontend.\n *\n */\n\nclass JoblyApi {\n  // the token for interactive with the API will be stored here.\n  static token;\n\n  static async request(endpoint, data = {}, method = \"get\") {\n    console.debug(\"API Call:\", endpoint, data, method);\n\n    const url = `${BASE_URL}/${endpoint}`;\n    const headers = { Authorization: `Bearer ${JoblyApi.token}` };\n    const params = method === \"get\" ? data : {};\n\n    try {\n      return (await axios({ url, method, data, params, headers })).data;\n    } catch (err) {\n      console.error(\"API Error:\", err.response);\n      let message = err.response.data.error.message;\n      throw Array.isArray(message) ? message : [message];\n    }\n  }\n\n  // Individual API routes\n\n  /** Get details on a company by handle. */\n\n  static async getCompany(handle) {\n    let res = await this.request(`companies/${handle}`);\n    return res.company;\n  }\n\n  static async getAllCompanies(searchTermString = \"\") {\n    let res = searchTermString\n      ? await this.request(`companies?name=${searchTermString}`)\n      : await this.request(\"companies\");\n    return res.companies;\n  }\n\n  static async getAllJobs(searchTermString = \"\") {\n    let res = searchTermString\n      ? await this.request(`jobs?title=${searchTermString}`)\n      : await this.request(\"jobs\");\n    return res.jobs;\n  }\n  //make similar change as getAllCompanies to getAllJobs\n\n  static async getJob(id) {\n    let res = await this.request(`jobs/${id}`);\n    return res.job;\n  }\n\n  static async register(data) {\n    let res = await this.request(\"auth/register\", data, \"post\");\n    return res.token;\n  }\n\n  static async update(username, data) {\n    let res = await this.request(`users/${username}`, data, \"patch\");\n    return res.user;\n  }\n\n  static async login(data) {\n    let res = await this.request(\"auth/token\", data, \"post\");\n    return res;\n  }\n\n  static async getUser(username) {\n    let res = await this.request(`users/${username}`);\n    return res.user;\n  }\n\n  static async applyForJob(username, jobId) {\n    let res = await this.request(`users/${username}/jobs/${jobId}`, {}, \"post\");\n    return res.applied;\n  }\n  // obviously, you'll add a lot here ...\n}\n\n// for now, put token (\"testuser\" / \"password\" on class)\nJoblyApi.token =\n  \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZ\" +\n  \"SI6InRlc3R1c2VyIiwiaXNBZG1pbiI6ZmFsc2UsImlhdCI6MTU5ODE1OTI1OX0.\" +\n  \"FtrMwBQwe6Ue-glIFgz_Nf8XxRT2YecFCiSpYL0fCXc\";\n\nexport default JoblyApi;\n","import { useContext } from \"react\";\nimport UserContext from \"../userContext\";\n\nfunction JobCard({ job }) {\n  const { currentUser, applyForJob } = useContext(UserContext);\n  const { id, title, salary, equity, companyName } = job;\n  const isApplied = !currentUser?.applications\n    ? false\n    : currentUser.applications.includes(id);\n\n  async function handleClick(e) {\n    await applyForJob(id);\n  }\n\n  return (\n    <div className=\"card w-75 mb-3\">\n      <div className=\"card-body\">\n        <h5 className=\"card-title\">{title}</h5>\n        <h5 className=\"card-title\">{companyName}</h5>\n        <p className=\"card-text\">Salary: {salary}</p>\n        <p className=\"card-text\">Equity:{equity}</p>\n        {!isApplied && (\n          <button onClick={handleClick} className=\"btn btn-success\">\n            Apply\n          </button>\n        )}\n        {isApplied && (\n          <button className=\"btn btn-outline-success\">APPLIED</button>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default JobCard;\n\n// ask about local storage\n","export default __webpack_public_path__ + \"static/media/cityscape.b47b43c1.jpg\";","import { useContext, useEffect, useState } from \"react\";\nimport UserContext from \"./userContext\";\nimport JoblyApi from \"./JoblyAPI\";\nimport JobCard from \"./Jobs/JobCard\";\nimport './Home.css'\nimport cityscape from './images/cityscape.jpg'\n\nfunction Home() {\n  const { currentUser, token } = useContext(UserContext);\n  const jobApps = currentUser?.applications;\n  const [jobsAppliedTo, setJobsAppliedTo] = useState([]);\n\n  useEffect(async () => {\n    const fetchJobs = async () =>\n      await Promise.all(\n        jobApps.map(async (jobId) => {\n          return await JoblyApi.getJob(jobId);\n        })\n      );\n\n    if (!jobApps) {\n      return;\n    }\n    setJobsAppliedTo(await fetchJobs());\n  }, [jobApps]);\n\n  return (\n    <div \n    className=\"Home h-100 d-flex flex-column justify-content-center align-items-center\"\n    >\n      {token ? (\n        <div className=\"container\">\n          <h1>Welcome{\", \" + currentUser?.firstName}!</h1>\n          <h4 className=\"my-5\">Here are the jobs that you've applied to:</h4>\n          <div className=\"row\">\n            {jobsAppliedTo.map((job) => (\n              <div className=\"col-md-3\">\n                <JobCard job={job} />\n              </div>\n            ))}\n          </div>\n        </div>\n      ) : (\n          <div className=\"text-light d-flex flex-column justify-content-center align-items-center\">\n          <h1>Welcome to Jobly!</h1>\n          <h3>Your dream career starts here.</h3>\n          </div>\n      )}\n    </div>\n  );\n}\n\nexport default Home;\n","import { Link } from \"react-router-dom\";\n\nfunction CompanyCard({ company }) {\n  const { name, description, handle } = company;\n  return (\n    <Link\n      className=\"Link\"\n      style={{ color: \"black\", textDecoration: \"none\" }}\n      to={`companies/${handle}`}\n    >\n      <div className=\"card\">\n        <div className=\"card-body\">\n          <h5 className=\"card-title\">{name}</h5>\n          <p className=\"card-text\">{description}</p>\n        </div>\n      </div>\n    </Link>\n  );\n}\n\nexport default CompanyCard;\n","import { useState } from \"react\";\n\nfunction SearchBar({ addSearchTerm }) {\n  const [formData, setFormData] = useState(\"\");\n\n  function handleChange(e) {\n    setFormData(e.target.value);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    addSearchTerm(formData);\n    setFormData(\"\");\n  }\n\n  return (\n    <form className=\"my-2 d-flex\" onSubmit={handleSubmit}>\n      <div className=\"form-group mb-2 col-md-5\">\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          id=\"search\"\n          name=\"searchTerm\"\n          value={formData.searchTerm}\n          placeholder=\"Enter a search term\"\n          onChange={handleChange}\n        />\n      </div>\n      <div>\n        <button type=\"submit\" className=\"btn btn-primary mb-2\">\n          Search\n        </button>\n      </div>\n    </form>\n  );\n}\n\nexport default SearchBar;\n","import JoblyApi from \"../JoblyAPI\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport CompanyCard from \"./CompanyCard\";\nimport SearchBar from \"../Forms/SearchBar\";\nimport UserContext from \"../userContext\";\n\nfunction CompanyList() {\n  const [companies, setCompanies] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const { token } = useContext(UserContext);\n\n  useEffect(() => {\n    async function getCompanyList() {\n      const companyList = await JoblyApi.getAllCompanies();\n      setCompanies(companyList);\n    }\n    getCompanyList();\n  }, []);\n\n  function addSearchTerm(term) {\n    setSearchTerm(term);\n  }\n\n  useEffect(() => {\n    async function getCompanyList() {\n      const companyList = await JoblyApi.getAllCompanies(searchTerm);\n      console.log(\"COMPANY LIST\", companyList);\n      setCompanies(companyList);\n    }\n    if (searchTerm) getCompanyList();\n  }, [searchTerm]);\n\n  if (!companies.length) return <div>Loading....</div>;\n  console.log(\"Inside companies!\", token.token);\n  return (\n    <div>\n      <div className=\"m-3\">\n        <h1>Companies</h1>\n        <SearchBar addSearchTerm={addSearchTerm} />\n        {companies.map((company) => (\n          <div className=\"col-sm-5 mt-3\" key={company.handle}>\n            <CompanyCard company={company} />\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default CompanyList;\n","import { useContext, useEffect, useState } from \"react\";\nimport { Redirect, useParams } from \"react-router-dom\";\nimport JoblyAPI from \"../JoblyAPI\";\nimport JobCard from \"../Jobs/JobCard\";\nimport UserContext from \"../userContext\";\n\nfunction CompanyDetail() {\n  const { token } = useContext(UserContext);\n  const { handle } = useParams();\n  const [companyJobs, setCompanyJobs] = useState([]);\n\n  useEffect(() => {\n    async function getCompany() {\n      const companyRes = await JoblyAPI.getCompany(handle);\n      setCompanyJobs(companyRes.jobs);\n    }\n    getCompany();\n  }, []);\n\n  if (!companyJobs.length) return <div>Loading....</div>;\n\n  return (\n    <div>\n      {token && (\n        <div>\n          {companyJobs.map((job) => (\n            <JobCard job={job} key={job.id} />\n          ))}\n        </div>\n      )}\n      {!token && <Redirect to=\"/login\" />}\n    </div>\n  );\n}\n\nexport default CompanyDetail;\n","import SearchBar from \"../Forms/SearchBar\";\nimport React, { useState, useEffect, useContext } from \"react\";\nimport JoblyApi from \"../JoblyAPI\";\nimport JobCard from \"./JobCard\";\nimport UserContext from \"../userContext\";\n\nfunction JobsList() {\n  const [jobs, setJobs] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const { token, currentUser } = useContext(UserContext);\n\n  useEffect(() => {\n    async function getJobsList() {\n      const jobList = await JoblyApi.getAllJobs();\n      setJobs(jobList);\n    }\n    getJobsList();\n  }, []);\n\n  function addSearchTerm(term) {\n    setSearchTerm(term);\n  }\n\n  useEffect(() => {\n    async function getJobsList() {\n      const jobList = await JoblyApi.getAllJobs(searchTerm);\n      setJobs(jobList);\n    }\n    if (searchTerm) getJobsList();\n  }, [searchTerm]);\n\n  if (!jobs.length) return <div>Loading....</div>;\n\n  return (\n    <div className=\"m-3\">\n      {currentUser && (\n        <div>\n          <h1>Jobs</h1>\n          <SearchBar addSearchTerm={addSearchTerm} />\n          {jobs.map((job) => (\n            <JobCard key={job.id} job={job} />\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default JobsList;\n","const RedAlert = () => (\n  <div className=\"alert alert-danger\" role=\"alert\">\n    Invalid username/password.\n  </div>\n);\n\nexport default RedAlert;\n","import { useContext, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport RedAlert from \"../RedAlert\";\nimport UserContext from \"../userContext\";\n\nfunction Login({ loginUser }) {\n  const { isInvalidLogin } = useContext(UserContext);\n  const history = useHistory();\n  const [formData, setFormData] = useState({ username: \"\", password: \"\" });\n\n  function handleChange(evt) {\n    const { name, value } = evt.target;\n    setFormData((formData) => ({\n      ...formData,\n      [name]: value,\n    }));\n  }\n\n  async function handleSubmit(evt) {\n    evt.preventDefault();\n    await loginUser(formData);\n    history.push(\"/\");\n  }\n\n  return (\n    <div className=\"container my-2\">\n    <div className=\"h-100 d-flex flex-column justify-content-center align-items-center\">\n    <h1>Login</h1>\n      {isInvalidLogin && <RedAlert />}\n      <form className=\"w-100 d-flex flex-column justify-content-center align-items-center\" onSubmit={handleSubmit}>\n        <div className=\"form-group col-sm-4 my-2\">\n          <label htmlFor=\"username\">Username</label>\n          <input\n            onChange={handleChange}\n            type=\"text\"\n            className=\"form-control\"\n            id=\"username\"\n            aria-describedby=\"emailHelp\"\n            name=\"username\"\n            value={formData.username}\n            placeholder=\"Enter username\"\n          />\n        </div>\n        <div className=\"form-group col-sm-4 my-2\">\n          <label htmlFor=\"password\">Password</label>\n          <input\n            onChange={handleChange}\n            type=\"password\"\n            className=\"form-control\"\n            id=\"password\"\n            name=\"password\"\n            value={formData.password}\n            placeholder=\"Password\"\n          />\n        </div>\n\n        <button type=\"submit\" className=\"btn btn-primary\">\n          Submit\n        </button>\n      </form>\n    </div>\n    </div>\n  );\n}\n\nexport default Login;\n","import { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nfunction Signup({ signUp }) {\n  const initialFormData = {\n    username: \"\",\n    password: \"\",\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n  };\n  const history = useHistory();\n  const [formData, setFormData] = useState(initialFormData);\n\n  function handleChange(evt) {\n    const { name, value } = evt.target;\n    setFormData((formData) => ({\n      ...formData,\n      [name]: value,\n    }));\n  }\n\n  async function handleSubmit(evt) {\n    evt.preventDefault();\n    await signUp(formData);\n    history.push(\"/\");\n  }\n\n  return (\n    <div className=\"container my-2\">\n    <div className=\"h-100 d-flex flex-column justify-content-center align-items-center\">\n    <h1>Signup</h1>\n    <form className=\"w-100 d-flex flex-column justify-content-center align-items-center\" onSubmit={handleSubmit}>\n      <div className=\"form-group col-sm-6\">\n        <label htmlFor=\"username\">\n          <h6>Username</h6>\n        </label>\n        <input\n          onChange={handleChange}\n          type=\"text\"\n          className=\"form-control my-2\"\n          id=\"username\"\n          name=\"username\"\n          value={formData.username}\n          aria-describedby=\"emailHelp\"\n          placeholder=\"Enter username\"\n        />\n      </div>\n      <div className=\"form-group col-sm-6\">\n        <label htmlFor=\"password\">\n          <h6>Password</h6>\n        </label>\n        <input\n          onChange={handleChange}\n          type=\"password\"\n          className=\"form-control my-2\"\n          id=\"password\"\n          name=\"password\"\n          value={formData.password}\n          placeholder=\"Password\"\n        />\n      </div>\n      <div className=\"form-group col-sm-6\">\n        <label htmlFor=\"firstName\">\n          <h6>First Name</h6>\n        </label>\n        <input\n          onChange={handleChange}\n          type=\"text\"\n          className=\"form-control my-2\"\n          id=\"firstName\"\n          name=\"firstName\"\n          value={formData.firstName}\n          placeholder=\"First Name\"\n        />\n      </div>\n      <div className=\"form-group col-sm-6\">\n        <label htmlFor=\"lastName\">\n          <h6>Last Name</h6>\n        </label>\n        <input\n          onChange={handleChange}\n          type=\"text\"\n          className=\"form-control my-2\"\n          id=\"lastName\"\n          name=\"lastName\"\n          value={formData.lastName}\n          placeholder=\"Last Name\"\n        />\n      </div>\n      <div className=\"form-group col-sm-6\">\n        <label htmlFor=\"email\">\n          <h6>Email</h6>\n        </label>\n        <input\n          onChange={handleChange}\n          type=\"text\"\n          className=\"form-control my-2\"\n          id=\"email\"\n          name=\"email\"\n          value={formData.email}\n          placeholder=\"Email\"\n        />\n      </div>\n\n      <button type=\"submit\" className=\"btn btn-primary\">\n        Submit\n      </button>\n    </form>\n    </div>\n    </div>\n  );\n}\n\nexport default Signup;\n","import { useContext, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport UserContext from \"../userContext\";\n\nfunction Profile() {\n  const { currentUser, token, updateUser } = useContext(UserContext);\n  const history = useHistory();\n  const { firstName, lastName, email } = currentUser;\n  const [formData, setFormData] = useState({\n    firstName,\n    lastName,\n    email,\n  });\n\n  function handleChange(evt) {\n    const { name, value } = evt.target;\n    setFormData((formData) => ({\n      ...formData,\n      [name]: value,\n    }));\n  }\n\n  async function handleSubmit(evt) {\n    evt.preventDefault();\n    await updateUser(currentUser.username, formData);\n    history.push(\"/\");\n  }\n\n  console.log(\"current user PROFILE\", currentUser);\n  console.log(\"token PROFILE\", token);\n  console.log(\"localstorage PROFILE!\", localStorage.getItem(\"userToken\"));\n\n  return (\n    <div className=\"container mt-3\">\n      <h1>Edit your profile</h1>\n      <form onSubmit={handleSubmit}>\n        <div className=\"form-group\">\n          <label htmlFor=\"username\">\n            <b>USERNAME</b>\n          </label>\n          <p>{currentUser.username}</p>\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"firstName\">First Name</label>\n          <input\n            onChange={handleChange}\n            type=\"text\"\n            className=\"form-control my-2\"\n            id=\"firstName\"\n            name=\"firstName\"\n            value={formData.firstName || currentUser.firstName}\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"lastName\">Last Name</label>\n          <input\n            onChange={handleChange}\n            type=\"text\"\n            className=\"form-control my-2\"\n            id=\"lastName\"\n            name=\"lastName\"\n            value={formData.lastName || currentUser.lastName}\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"email\">Email</label>\n          <input\n            onChange={handleChange}\n            type=\"text\"\n            className=\"form-control my-2\"\n            id=\"email\"\n            name=\"email\"\n            value={formData.email || currentUser.email}\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"password\">Confirm Password</label>\n          <input\n            onChange={handleChange}\n            type=\"password\"\n            className=\"form-control my-2\"\n            id=\"password\"\n            name=\"password\"\n            value={formData.password}\n            placeholder=\"Password\"\n          />\n        </div>\n\n        <button type=\"submit\" className=\"btn btn-primary\">\n          Submit\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default Profile;\n","import { Route, Switch, Redirect } from \"react-router-dom\";\nimport Home from \"./Home\";\nimport CompanyList from \"./Companies/CompanyList\";\nimport CompanyDetail from \"./Companies/CompanyDetail\";\nimport JobsList from \"./Jobs/JobsList\";\nimport Login from \"./Forms/Login\";\nimport Signup from \"./Forms/Signup\";\nimport Profile from \"./Forms/Profile\";\nimport { useContext } from \"react\";\nimport UserContext from \"./userContext\";\n\nfunction Routes({ signUp, loginUser }) {\n  const { token, isInvalidLogin } = useContext(UserContext);\n  const isAuthenticated = Boolean(token);\n  return (\n    <Switch>\n      <Route exact path=\"/\">\n        {isInvalidLogin ? <Redirect to=\"/login\" /> : <Home />}\n      </Route>\n      <Route exact path=\"/companies\">\n        {isAuthenticated ? <CompanyList /> : <Redirect to=\"/login\" />}\n      </Route>\n      <Route exact path=\"/companies/:handle\">\n        {isAuthenticated ? <CompanyDetail /> : <Redirect to=\"/login\" />}\n      </Route>\n      <Route exact path=\"/jobs\">\n        {isAuthenticated ? <JobsList /> : <Redirect to=\"/login\" />}\n      </Route>\n      <Route exact path=\"/login\">\n        <Login loginUser={loginUser} />\n      </Route>\n      <Route exact path=\"/signup\">\n        <Signup signUp={signUp} />\n      </Route>\n      <Route exact path=\"/profile\">\n        {isAuthenticated ? <Profile /> : <Redirect to=\"/login\" />}\n      </Route>\n      <Redirect to=\"/\" />\n    </Switch>\n  );\n}\n\nexport default Routes;\n","import { useContext } from \"react\";\nimport { NavLink, Link } from \"react-router-dom\";\nimport \"./NavBar.css\";\nimport UserContext from \"./userContext\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSuitcase } from \"@fortawesome/free-solid-svg-icons\";\n\nconst jobIcon = <FontAwesomeIcon icon={faSuitcase} size=\"2x\" />;\n\nfunction NavBar({ logout }) {\n  const { token } = useContext(UserContext);\n  return (\n    <>\n      <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n        <Link to=\"/\" className=\"navbar-nav nav-brand text-light mr-auto\">\n          {jobIcon}\n        </Link>\n        {token && (\n          <nav className=\"navbar-expand navbar\" id=\"navbarNav\">\n            <ul className=\"navbar-nav ml-auto\">\n              <li className=\"nav-item mr-4\">\n                <NavLink to=\"/companies\" className=\"nav-link\">\n                  Companies\n                </NavLink>\n              </li>\n              <li className=\"nav-item mr-4\">\n                <NavLink to=\"/jobs\" className=\"nav-link\">\n                  Jobs\n                </NavLink>\n              </li>\n              <li className=\"nav-item mr-4\">\n                <NavLink to=\"/profile\" className=\"nav-link\">\n                  Profile\n                </NavLink>\n              </li>\n              <li className=\"nav-item mr-4\">\n                <NavLink onClick={logout} to=\"/logout\" className=\"nav-link\">\n                  Logout\n                </NavLink>\n              </li>\n            </ul>\n          </nav>\n        )}\n\n        {!token && (\n          <nav className=\"navbar navbar-expand\" id=\"navbarNav\">\n            <ul className=\"navbar-nav ml-auto\">\n              <li className=\"nav-item mr-4\">\n                <NavLink to=\"/login\" className=\"nav-link\">\n                  Login\n                </NavLink>\n              </li>\n              <li className=\"nav-item mr-4\">\n                <NavLink to=\"/signup\" className=\"nav-link\">\n                  Signup\n                </NavLink>\n              </li>\n            </ul>\n          </nav>\n        )}\n      </nav>\n    </>\n  );\n}\n\nexport default NavBar;\n","import \"bootstrap/dist/css/bootstrap.css\";\nimport \"bootstrap/dist/js/bootstrap.bundle.min.js\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport Routes from \"./Routes\";\nimport NavBar from \"./NavBar\";\nimport JoblyApi from \"./JoblyAPI\";\nimport UserContext from \"./userContext\";\nimport jwt from \"jsonwebtoken\";\n\nfunction App() {\n  const [token, setToken] = useState(localStorage.getItem(\"userToken\") || null);\n  const [currentUser, setCurrentUser] = useState(null);\n  const [isInvalidLogin, setIsInvalidLogin] = useState(false);\n\n  async function signUp(userData) {\n    const resp = await JoblyApi.register(userData);\n    setToken(resp);\n  }\n\n  useEffect(() => {\n    if (!token) {\n      return;\n    }\n    async function getUserInfo() {\n      JoblyApi.token = token;\n      const resp = await JoblyApi.getUser(jwt.decode(token).username);\n      setCurrentUser(resp);\n    }\n    getUserInfo();\n  }, [token]);\n\n  async function loginUser(userData) {\n    try {\n      const resp = await JoblyApi.login(userData);\n      setToken(resp.token);\n      setIsInvalidLogin(false);\n    } catch (e) {\n      setIsInvalidLogin(true);\n    }\n  }\n\n  async function updateUser(formUsername, userData) {\n    const resp = await JoblyApi.update(formUsername, userData);\n    setCurrentUser((currentUser) => ({ ...currentUser, resp }));\n    console.log(\"UPDATED USER\", currentUser);\n  }\n\n  useEffect(() => {\n    if (token) {\n      localStorage.setItem(\"userToken\", token);\n    } else {\n      localStorage.clear();\n    }\n  }, [token]);\n\n  async function applyForJob(id) {\n    if (!currentUser) {\n      return;\n    }\n    const jobId = await JoblyApi.applyForJob(currentUser.username, id);\n    setCurrentUser((currentUser) => ({\n      ...currentUser,\n      applications: [...currentUser.applications, jobId],\n    }));\n  }\n\n  console.log(\"current user\", currentUser);\n  // console.log(\"token\", token);\n  // console.log(\"localstorage!\", localStorage.getItem(\"userToken\"));\n\n  function logout() {\n    setToken(null);\n  }\n\n  return (\n  <div className=\"container-fluid mx-0 px-0 h-100\">\n      <BrowserRouter>\n        <UserContext.Provider\n          value={{\n            token,\n            isInvalidLogin,\n            currentUser,\n            updateUser,\n            applyForJob,\n          }}\n        >\n          <NavBar logout={logout} />\n          <Routes signUp={signUp} loginUser={loginUser} />\n        </UserContext.Provider>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}