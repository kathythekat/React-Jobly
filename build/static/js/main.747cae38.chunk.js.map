{"version":3,"sources":["userContext.js","Home.js","JoblyAPI.js","CompanyCard.js","SearchBar.js","CompanyList.js","JobCard.js","CompanyDetail.js","JobsList.js","Login.js","Signup.js","Profile.js","Routes.js","NavBar.js","App.js","reportWebVitals.js","index.js"],"names":["UserContext","React","createContext","Home","useContext","currentUser","token","className","firstName","BASE_URL","process","JoblyApi","endpoint","data","method","console","debug","url","headers","Authorization","params","axios","error","response","message","Array","isArray","handle","this","request","res","company","searchTermString","companies","jobs","id","job","username","user","jobId","applied","CompanyCard","name","description","style","color","textDecoration","to","SearchBar","addSearchTerm","useState","formData","setFormData","onSubmit","e","preventDefault","type","value","searchTerm","placeholder","onChange","target","CompanyList","setCompanies","setSearchTerm","useEffect","a","getAllCompanies","companyList","getCompanyList","log","length","term","map","JobCard","applyForJob","title","salary","equity","companyName","isApplied","applications","includes","onClick","CompanyDetail","useParams","companyJobs","setCompanyJobs","JoblyAPI","getCompany","companyRes","JobsList","setJobs","getAllJobs","jobList","getJobsList","Login","loginUser","history","useHistory","password","handleChange","evt","push","htmlFor","aria-describedby","Signup","signUp","lastName","email","Profile","updateUser","localStorage","getItem","Routes","exact","path","NavBar","logout","App","initialUser","setToken","setCurrentUser","userData","register","resp","login","formUsername","update","getUser","jwt","decode","getUserInfo","setItem","clear","Provider","isAuthenticated","Boolean","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.747cae38.chunk.js","sourcesContent":["import React from \"react\";\n\nconst UserContext = React.createContext();\n\nexport default UserContext;\n","import { useContext } from \"react\";\nimport UserContext from \"./userContext\";\n\nfunction Home() {\n  const { currentUser, token } = useContext(UserContext);\n  return (\n    <div className=\"my-3 d-flex justify-content-center\">\n      {token ? (\n        <h1>Welcome back, {currentUser.firstName}!</h1>\n      ) : (\n        <h1>Welcome to Jobly!</h1>\n      )}\n    </div>\n  );\n}\n\nexport default Home;\n","import axios from \"axios\";\n\nconst BASE_URL = process.env.REACT_APP_BASE_URL || \"http://localhost:3001\";\n\n/** API Class.\n *\n * Static class tying together methods used to get/send to to the API.\n * There shouldn't be any frontend-specific stuff here, and there shouldn't\n * be any API-aware stuff elsewhere in the frontend.\n *\n */\n\nclass JoblyApi {\n  // the token for interactive with the API will be stored here.\n  static token;\n\n  static async request(endpoint, data = {}, method = \"get\") {\n    console.debug(\"API Call:\", endpoint, data, method);\n\n    const url = `${BASE_URL}/${endpoint}`;\n    const headers = { Authorization: `Bearer ${JoblyApi.token}` };\n    const params = method === \"get\" ? data : {};\n\n    try {\n      return (await axios({ url, method, data, params, headers })).data;\n    } catch (err) {\n      console.error(\"API Error:\", err.response);\n      let message = err.response.data.error.message;\n      throw Array.isArray(message) ? message : [message];\n    }\n  }\n\n  // Individual API routes\n\n  /** Get details on a company by handle. */\n\n  static async getCompany(handle) {\n    let res = await this.request(`companies/${handle}`);\n    return res.company;\n  }\n\n  static async getAllCompanies(searchTermString = \"\") {\n    let res = searchTermString\n      ? await this.request(`companies?name=${searchTermString}`)\n      : await this.request(\"companies\");\n    return res.companies;\n  }\n\n  static async getAllJobs(searchTermString = \"\") {\n    let res = searchTermString\n      ? await this.request(`jobs?title=${searchTermString}`)\n      : await this.request(\"jobs\");\n    return res.jobs;\n  }\n  //make similar change as getAllCompanies to getAllJobs\n\n  static async getJob(id) {\n    let res = await this.request(`jobs/${id}`);\n    return res.job;\n  }\n\n  static async register(data) {\n    let res = await this.request(\"auth/register\", data, \"post\");\n    return res.token;\n  }\n\n  static async update(username, data) {\n    let res = await this.request(`users/${username}`, data, \"patch\");\n    return res.user;\n  }\n\n  static async login(data) {\n    let res = await this.request(\"auth/token\", data, \"post\");\n    return res.token;\n  }\n\n  static async getUser(username) {\n    let res = await this.request(`users/${username}`);\n    return res.user;\n  }\n\n  static async applyForJob(username, jobId) {\n    let res = await this.request(`users/${username}/jobs/${jobId}`, {}, \"post\");\n    return res.applied;\n  }\n  // obviously, you'll add a lot here ...\n}\n\n// for now, put token (\"testuser\" / \"password\" on class)\nJoblyApi.token =\n  \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZ\" +\n  \"SI6InRlc3R1c2VyIiwiaXNBZG1pbiI6ZmFsc2UsImlhdCI6MTU5ODE1OTI1OX0.\" +\n  \"FtrMwBQwe6Ue-glIFgz_Nf8XxRT2YecFCiSpYL0fCXc\";\n\nexport default JoblyApi;\n","import { Link } from \"react-router-dom\";\n\nfunction CompanyCard({ company }) {\n  const { name, description, handle } = company;\n  return (\n    <Link\n      className=\"Link\"\n      style={{ color: \"black\", textDecoration: \"none\" }}\n      to={`companies/${handle}`}\n    >\n      <div className=\"card\">\n        <div className=\"card-body\">\n          <h5 className=\"card-title\">{name}</h5>\n          <p className=\"card-text\">{description}</p>\n        </div>\n      </div>\n    </Link>\n  );\n}\n\nexport default CompanyCard;\n","import { useState } from \"react\";\n\nfunction SearchBar({ addSearchTerm }) {\n  const [formData, setFormData] = useState(\"\");\n\n  function handleChange(e) {\n    setFormData(e.target.value);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    addSearchTerm(formData);\n    setFormData(\"\");\n  }\n\n  return (\n    <form className=\"my-2 d-flex\" onSubmit={handleSubmit}>\n      <div className=\"form-group mb-2 col-md-5\">\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          id=\"search\"\n          name=\"searchTerm\"\n          value={formData.searchTerm}\n          placeholder=\"Enter a search term\"\n          onChange={handleChange}\n        />\n      </div>\n      <div>\n        <button type=\"submit\" className=\"btn btn-primary mb-2\">\n          Search\n        </button>\n      </div>\n    </form>\n  );\n}\n\nexport default SearchBar;\n","import JoblyApi from \"./JoblyAPI\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport CompanyCard from \"./CompanyCard\";\nimport SearchBar from \"./SearchBar\";\nimport UserContext from \"./userContext\";\nimport { Redirect } from \"react-router\";\n\nfunction CompanyList() {\n  const [companies, setCompanies] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const { token } = useContext(UserContext);\n\n  useEffect(() => {\n    async function getCompanyList() {\n      const companyList = await JoblyApi.getAllCompanies();\n      setCompanies(companyList);\n    }\n    getCompanyList();\n  }, []);\n\n  function addSearchTerm(term) {\n    setSearchTerm(term);\n  }\n\n  useEffect(() => {\n    async function getCompanyList() {\n      const companyList = await JoblyApi.getAllCompanies(searchTerm);\n      console.log(\"COMPANY LIST\", companyList);\n      setCompanies(companyList);\n    }\n    if (searchTerm) getCompanyList();\n  }, [searchTerm]);\n\n  if (!companies.length) return <div>Loading....</div>;\n  console.log(\"Inside companies!\", token.token);\n  return (\n    <div>\n      <div className=\"m-3\">\n        <h1>Companies</h1>\n        <SearchBar addSearchTerm={addSearchTerm} />\n        {companies.map((company) => (\n          <div className=\"col-sm-5 mt-3\" key={company.handle}>\n            <CompanyCard company={company} />\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default CompanyList;\n","import { useRef, useContext, useEffect, useState } from \"react\";\nimport UserContext from \"./userContext\";\n\nfunction JobCard({ job }) {\n  const { currentUser, applyForJob } = useContext(UserContext);\n  const { id, title, salary, equity, companyName } = job;\n  const isApplied =\n    !currentUser || !currentUser.applications\n      ? false\n      : currentUser.applications.includes(id);\n\n  async function handleClick(e) {\n    await applyForJob(id);\n  }\n\n  return (\n    <div className=\"card w-75 mb-3\">\n      <div className=\"card-body\">\n        <h5 className=\"card-title\">{title}</h5>\n        <h5 className=\"card-title\">{companyName}</h5>\n        <p className=\"card-text\">Salary: {salary}</p>\n        <p className=\"card-text\">Equity:{equity}</p>\n        {!isApplied && (\n          <button onClick={handleClick} className=\"btn btn-danger\">\n            Apply\n          </button>\n        )}\n        {isApplied && <button className=\"btn btn-success\">APPLIED</button>}\n      </div>\n    </div>\n  );\n}\n\nexport default JobCard;\n\n// ask about local storage\n","import { useContext, useEffect, useState } from \"react\";\nimport { Redirect, useParams } from \"react-router-dom\";\nimport JoblyAPI from \"./JoblyAPI\";\nimport JobCard from \"./JobCard\";\nimport UserContext from \"./userContext\";\n\nfunction CompanyDetail() {\n  const { token } = useContext(UserContext);\n  const { handle } = useParams();\n  const [companyJobs, setCompanyJobs] = useState([]);\n\n  useEffect(() => {\n    async function getCompany() {\n      const companyRes = await JoblyAPI.getCompany(handle);\n      setCompanyJobs(companyRes.jobs);\n    }\n    getCompany();\n  }, []);\n\n  if (!companyJobs.length) return <div>Loading....</div>;\n\n  return (\n    <div>\n      {token && (\n        <div>\n          {companyJobs.map((job) => (\n            <JobCard job={job} key={job.id} />\n          ))}\n        </div>\n      )}\n      {!token && <Redirect to=\"/login\" />}\n    </div>\n  );\n}\n\nexport default CompanyDetail;\n","import SearchBar from \"./SearchBar\";\nimport React, { useState, useEffect, useContext } from \"react\";\nimport JoblyApi from \"./JoblyAPI\";\nimport JobCard from \"./JobCard\";\nimport UserContext from \"./userContext\";\nimport { Redirect } from \"react-router\";\n\nfunction JobsList() {\n  const [jobs, setJobs] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const { token, currentUser } = useContext(UserContext);\n\n  useEffect(() => {\n    async function getJobsList() {\n      const jobList = await JoblyApi.getAllJobs();\n      setJobs(jobList);\n    }\n    getJobsList();\n  }, []);\n\n  function addSearchTerm(term) {\n    setSearchTerm(term);\n  }\n\n  useEffect(() => {\n    async function getJobsList() {\n      const jobList = await JoblyApi.getAllJobs(searchTerm);\n      setJobs(jobList);\n    }\n    if (searchTerm) getJobsList();\n  }, [searchTerm]);\n\n  if (!jobs.length) return <div>Loading....</div>;\n\n  return (\n    <div className=\"m-3\">\n      {token && (\n        <div>\n          <h1>Jobs</h1>\n          <SearchBar addSearchTerm={addSearchTerm} />\n          {jobs.map((job) => (\n            <JobCard key={job.id} job={job} />\n          ))}\n        </div>\n      )}\n      {!token && <Redirect to=\"/login\" />}\n    </div>\n  );\n}\n\nexport default JobsList;\n","import { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nfunction Login({ loginUser }) {\n  const history = useHistory();\n  const [formData, setFormData] = useState({ username: \"\", password: \"\" });\n\n  function handleChange(evt) {\n    const { name, value } = evt.target;\n    setFormData((formData) => ({\n      ...formData,\n      [name]: value,\n    }));\n  }\n\n  async function handleSubmit(evt) {\n    evt.preventDefault();\n    await loginUser(formData);\n    setFormData({ username: \"\", password: \"\" });\n    history.push(\"/\");\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div className=\"form-group\">\n        <label htmlFor=\"username\">Username</label>\n        <input\n          onChange={handleChange}\n          type=\"text\"\n          className=\"form-control\"\n          id=\"username\"\n          aria-describedby=\"emailHelp\"\n          name=\"username\"\n          value={formData.username}\n          placeholder=\"Enter username\"\n        />\n      </div>\n      <div className=\"form-group\">\n        <label htmlFor=\"password\">Password</label>\n        <input\n          onChange={handleChange}\n          type=\"password\"\n          className=\"form-control\"\n          id=\"password\"\n          name=\"password\"\n          value={formData.password}\n          placeholder=\"Password\"\n        />\n      </div>\n\n      <button type=\"submit\" className=\"btn btn-primary\">\n        Submit\n      </button>\n    </form>\n  );\n}\n\nexport default Login;\n","import { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nfunction Signup({ signUp }) {\n  const initialFormData = {\n    username: \"\",\n    password: \"\",\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n  };\n  const history = useHistory();\n  const [formData, setFormData] = useState(initialFormData);\n\n  function handleChange(evt) {\n    const { name, value } = evt.target;\n    setFormData((formData) => ({\n      ...formData,\n      [name]: value,\n    }));\n  }\n\n  async function handleSubmit(evt) {\n    evt.preventDefault();\n    await signUp(formData);\n    history.push(\"/\");\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div className=\"form-group\">\n        <label htmlFor=\"username\">Username</label>\n        <input\n          onChange={handleChange}\n          type=\"text\"\n          className=\"form-control\"\n          id=\"username\"\n          name=\"username\"\n          value={formData.username}\n          aria-describedby=\"emailHelp\"\n          placeholder=\"Enter username\"\n        />\n      </div>\n      <div className=\"form-group\">\n        <label htmlFor=\"password\">Password</label>\n        <input\n          onChange={handleChange}\n          type=\"password\"\n          className=\"form-control\"\n          id=\"password\"\n          name=\"password\"\n          value={formData.password}\n          placeholder=\"Password\"\n        />\n      </div>\n      <div className=\"form-group\">\n        <label htmlFor=\"firstName\">First Name</label>\n        <input\n          onChange={handleChange}\n          type=\"text\"\n          className=\"form-control\"\n          id=\"firstName\"\n          name=\"firstName\"\n          value={formData.firstName}\n          placeholder=\"\"\n        />\n      </div>\n      <div className=\"form-group\">\n        <label htmlFor=\"lastName\">Last Name</label>\n        <input\n          onChange={handleChange}\n          type=\"text\"\n          className=\"form-control\"\n          id=\"lastName\"\n          name=\"lastName\"\n          value={formData.lastName}\n          placeholder=\"\"\n        />\n      </div>\n      <div className=\"form-group\">\n        <label htmlFor=\"email\">Email</label>\n        <input\n          onChange={handleChange}\n          type=\"text\"\n          className=\"form-control\"\n          id=\"email\"\n          name=\"email\"\n          value={formData.email}\n          placeholder=\"\"\n        />\n      </div>\n\n      <button type=\"submit\" className=\"btn btn-primary\">\n        Submit\n      </button>\n    </form>\n  );\n}\n\nexport default Signup;\n","import { useContext, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport UserContext from \"./userContext\";\n\nfunction Profile() {\n  const { currentUser, token, updateUser } = useContext(UserContext);\n  const history = useHistory();\n  const { firstName, lastName, email } = currentUser;\n  const [formData, setFormData] = useState({\n    firstName,\n    lastName,\n    email,\n  });\n\n  function handleChange(evt) {\n    const { name, value } = evt.target;\n    setFormData((formData) => ({\n      ...formData,\n      [name]: value,\n    }));\n  }\n\n  async function handleSubmit(evt) {\n    evt.preventDefault();\n    await updateUser(currentUser.username, formData);\n    history.push(\"/\");\n  }\n\n  console.log(\"current user PROFILE\", currentUser);\n  console.log(\"token PROFILE\", token);\n  console.log(\"localstorage PROFILE!\", localStorage.getItem(\"userToken\"));\n\n  return (\n    <div className=\"container mt-3\">\n      <form onSubmit={handleSubmit}>\n        <div className=\"form-group\">\n          <label htmlFor=\"username\">\n            <b>Username</b>\n          </label>\n          <p>{currentUser.username}</p>\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"firstName\">First Name</label>\n          <input\n            onChange={handleChange}\n            type=\"text\"\n            className=\"form-control\"\n            id=\"firstName\"\n            name=\"firstName\"\n            value={formData.firstName || currentUser.firstName}\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"lastName\">Last Name</label>\n          <input\n            onChange={handleChange}\n            type=\"text\"\n            className=\"form-control\"\n            id=\"lastName\"\n            name=\"lastName\"\n            value={formData.lastName || currentUser.lastName}\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"email\">Email</label>\n          <input\n            onChange={handleChange}\n            type=\"text\"\n            className=\"form-control\"\n            id=\"email\"\n            name=\"email\"\n            value={formData.email || currentUser.email}\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"password\">Confirm Password</label>\n          <input\n            onChange={handleChange}\n            type=\"password\"\n            className=\"form-control\"\n            id=\"password\"\n            name=\"password\"\n            value={formData.password}\n            placeholder=\"Password\"\n          />\n        </div>\n\n        <button type=\"submit\" className=\"btn btn-primary\">\n          Submit\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default Profile;\n","import { Route, Switch, Redirect } from \"react-router-dom\";\nimport Home from \"./Home\";\nimport CompanyList from \"./CompanyList\";\nimport CompanyDetail from \"./CompanyDetail\";\nimport JobsList from \"./JobsList\";\nimport Login from \"./Login\";\nimport Signup from \"./Signup\";\nimport Profile from \"./Profile\";\nimport { useContext } from \"react\";\nimport UserContext from \"./userContext\";\n\nfunction Routes({ signUp, loginUser }) {\n  const { token } = useContext(UserContext);\n  return (\n    <Switch>\n      <Route exact path=\"/\">\n        <Home />\n      </Route>\n      <Route exact path=\"/companies\">\n        {token ? <CompanyList /> : <Redirect to=\"/login\" />}\n      </Route>\n      <Route exact path=\"/companies/:handle\">\n        {token ? <CompanyDetail /> : <Redirect to=\"/login\" />}\n      </Route>\n      <Route exact path=\"/jobs\">\n        {token ? <JobsList /> : <Redirect to=\"/login\" />}\n      </Route>\n      <Route exact path=\"/login\">\n        <Login loginUser={loginUser} />\n      </Route>\n      <Route exact path=\"/signup\">\n        <Signup signUp={signUp} />\n      </Route>\n      <Route exact path=\"/profile\">\n        {token ? <Profile /> : <Redirect to=\"/login\" />}\n      </Route>\n      <Redirect to=\"/\" />\n    </Switch>\n  );\n}\n\nexport default Routes;\n","import { useContext } from \"react\";\nimport { NavLink, Link } from \"react-router-dom\";\nimport \"./NavBar.css\";\nimport UserContext from \"./userContext\";\n\nfunction NavBar({ logout }) {\n  //also useContext for logout\n  const { token } = useContext(UserContext);\n  return (\n    <>\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-warning\">\n        <Link to=\"/\" className=\"navbar-brand mr-auto\">\n          Jobly\n        </Link>\n        {token && (\n          <nav className=\"navbar-expand navbar\" id=\"navbarNav\">\n            <ul className=\"navbar-nav ml-auto\">\n              <li className=\"nav-item mr-4\">\n                <NavLink to=\"/companies\" className=\"nav-link\">\n                  Companies\n                </NavLink>\n              </li>\n              <li className=\"nav-item mr-4\">\n                <NavLink to=\"/jobs\" className=\"nav-link\">\n                  Jobs\n                </NavLink>\n              </li>\n              <li className=\"nav-item mr-4\">\n                <NavLink to=\"/profile\" className=\"nav-link\">\n                  Profile\n                </NavLink>\n              </li>\n              <li className=\"nav-item mr-4\">\n                <NavLink onClick={logout} to=\"/logout\" className=\"nav-link\">\n                  Logout\n                </NavLink>\n              </li>\n            </ul>\n          </nav>\n        )}\n\n        {!token && (\n          <nav className=\"navbar navbar-expand\" id=\"navbarNav\">\n            <ul className=\"navbar-nav ml-auto\">\n              <li className=\"nav-item mr-4\">\n                <NavLink to=\"/login\" className=\"nav-link\">\n                  Login\n                </NavLink>\n              </li>\n              <li className=\"nav-item mr-4\">\n                <NavLink to=\"/signup\" className=\"nav-link\">\n                  Signup\n                </NavLink>\n              </li>\n            </ul>\n          </nav>\n        )}\n      </nav>\n    </>\n  );\n}\n\nexport default NavBar;\n","import \"bootstrap/dist/css/bootstrap.css\";\nimport \"bootstrap/dist/js/bootstrap.bundle.min.js\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport Routes from \"./Routes\";\nimport NavBar from \"./NavBar\";\nimport JoblyApi from \"./JoblyAPI\";\nimport UserContext from \"./userContext\";\nimport jwt from \"jsonwebtoken\";\n\n//if messages = true , show flash message\n\nfunction App() {\n  let initialUser = {\n    username: \"\",\n    firstName: \"\",\n  };\n  const [token, setToken] = useState(localStorage.getItem(\"userToken\") || null);\n  const [currentUser, setCurrentUser] = useState(initialUser);\n\n  async function signUp(userData) {\n    const resp = await JoblyApi.register(userData);\n    setToken(resp);\n  }\n\n  useEffect(() => {\n    async function getUserInfo() {\n      JoblyApi.token = token;\n      const resp = await JoblyApi.getUser(jwt.decode(token).username);\n      setCurrentUser(resp);\n    }\n    token ? getUserInfo() : setCurrentUser(initialUser);\n  }, [token]);\n\n  async function loginUser(userData) {\n    const resp = await JoblyApi.login(userData);\n    setToken(resp);\n  }\n\n  async function updateUser(formUsername, userData) {\n    const resp = await JoblyApi.update(formUsername, userData);\n    setCurrentUser(resp);\n  }\n\n  useEffect(() => {\n    if (token) {\n      localStorage.setItem(\"userToken\", token);\n    } else {\n      localStorage.clear();\n    }\n  }, [token]);\n\n  async function applyForJob(id) {\n    const jobId = await JoblyApi.applyForJob(currentUser.username, id);\n    setCurrentUser((currentUser) => ({\n      ...currentUser,\n      applications: [...currentUser.applications, jobId],\n    }));\n  }\n\n  console.log(\"current user\", currentUser);\n  // console.log(\"token\", token);\n  // console.log(\"localstorage!\", localStorage.getItem(\"userToken\"));\n\n  function logout() {\n    setToken(null);\n  }\n\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <UserContext.Provider\n          value={{ token, currentUser, updateUser, applyForJob }}\n        >\n          <NavBar logout={logout} />\n          <Routes\n            signUp={signUp}\n            loginUser={loginUser}\n            isAuthenticated={Boolean(token)}\n          />\n        </UserContext.Provider>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}